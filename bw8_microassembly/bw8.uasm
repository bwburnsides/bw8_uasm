# Microassembly for bw8 microprogram

@include state
@include opcodes

@microinstruction FETCH {
    RegisterWriteBack: MemoryData,
    RegisterLoad: Instruction,
    PointerSelect: ProgramCounter,
    OffsetMode: Increment,
}

@instruction NormalBase {
    FETCH,
}

@instruction ExtendedBase {
    FETCH,
    FETCH.SetExtension(True),
}

@rule Extended = False {
    @base NormalBase
}

@rule Extended = True { 
    @base ExtendedBase
}

@instruction Move8(dst, src) {
    @microinstruction {
        RegisterWriteBack: AluResult
    }.RegisterLeft(dst).RegisterRight(src),
}

@define MoveAtoB: Move8(RegisterLeft.A, RegisterRight.B)
@define MoveAtoC: Move8(RegisterLeft.A, RegisterRight.C)
@define MoveAtoD: Move8(RegisterLeft.A, RegisterRight.D)
@define MoveBtoA: Move8(RegisterLeft.B, RegisterRight.A)
